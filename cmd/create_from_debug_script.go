package cmd

import (
	"context"
	"errors"
	"github.com/neunhoef/smart-graph-maker/pkg/parser"
	"github.com/spf13/cobra"
)

var (
	cmdCreateFromDebugScript = &cobra.Command{
		Use:   "debugscript",
		Short: "Create database from files which were generated by the debug script",
		RunE:  createFromDebugScript,
	}
)

func init() {
	var sizeFilename, countFilename string

	cmdCreateFromDebugScript.Flags().StringVar(&sizeFilename, "sizefile", "",
		"File which contains size (in bytes) of shards")
	cmdCreateFromDebugScript.Flags().StringVar(&countFilename, "countfile", "",
		"File which contains number of documents in shards")
}

func createFromDebugScript(cmd *cobra.Command, _ []string) error {
	sizeFilename, _ := cmd.Flags().GetString("sizefile")
	countFilename, _ := cmd.Flags().GetString("countfile")

	if len(sizeFilename) == 0 {
		return errors.New("file with the size should be provided --sizefile")
	}

	if len(countFilename) == 0 {
		return errors.New("file with the count should be provided --countfile")
	}

	dataFromDebugScript := parser.DatabaseMetaDataFromDebugScript{
		SizeFileName:  sizeFilename,
		CountFileName: countFilename,
	}

	metadata := parser.NewDatabaseMetaData(&dataFromDebugScript)
	if err := metadata.GetData(); err != nil {
		return err
	}

	//metadata.Print()
	metadata.CreateDatabases(context.Background(), _client)

	return nil
}
